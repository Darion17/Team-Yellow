F-01 Load First N Records

Test 1.1 — Read N Records from CSV
Arrange: Prepare a CSV file with 10 records.
Act: Run Driver.loadFirstN("insurance.csv", 5)
Assert: Output should list the first 5 rows only with correct field parsing (Age, Sex, BMI, Children, Smoker, Region, Charges).
Result: Success


Test 1.2 — Empty CSV
Arrange: Create an empty file.
Act: Run Driver.loadFirstN("empty.csv", 3)
Assert: Output should show I/O error: Empty CSV (no header).
Result: Success 

F-03 Age Histogram (Per Age)

Test 3.1 — Plot Histogram from Sample Data
Arrange: Provide 5 records with ages 18, 19, 19, 20, 20.
Act: Call Driver.printPerAgeHistogram(ages, 50)
Assert: Output should print each age with a bar length scaled to frequency.
Result: Success

Test 3.2 — No Ages in List
Arrange: Use empty list.
Act: Call Driver.printPerAgeHistogram([], 50)
Assert: Output should say No ages to plot.
Result: Success 

F-05 Children Counts

Test 5.1 — Count by Children Number
Arrange: Create records with 0, 1, 2, 2 children.
Act: Run Driver.childrenCounts(records)
Assert: Output should show children=0→1, 1→1, 2→2.
Result: Success

Test 5.2 — Empty List
Arrange: Use no records.
Act: Call Driver.childrenCounts([])
Assert: Output should show Total records by number of children: and nothing else.
Result: Success

F-07 Region Fairness

Test 7.1 — Fair Distribution
Arrange: 4 regions each with equal counts.
Act: Run feature07_fairWithin5Percent(records)
Assert: Returns TRUE when spread ≤5%.
Result: Success

Test 7.2 — Uneven Distribution
Arrange: 6 records, 4 from “south” and 2 from “north.”
Act: Run feature07_fairWithin5Percent(records)
Assert: Returns FALSE.
Result: Success 

F-09 BMI Range Comparison

Test 9.1 — 30–45 Has Widest Range
Arrange: Assign BMI/charges to create wider middle range.
Act: Run feature09_bmi30to45HasWiderChargeRange(records)
Assert: Returns TRUE.
Result: Success

Test 9.2 — Narrow Middle Range
Arrange: Use lower charge variation in 30–45.
Act: Run same function.
Assert: Returns FALSE.
Result: Success

F-11 Smokers Higher Avg & Wider Range

Test 11.1 — Smokers Pay More
Arrange: Set smokers with higher avg and range of charges.
Act: Call feature11_smokersHigherAvgAndWider(records)
Assert: Output should be TRUE.
Result: Success

Test 11.2 — Equal Range
Arrange: Smokers and non-smokers have same charge range.
Act: Call same.
Assert: Output FALSE.
Result: Success

F-13 Smokers Lower BMI

Test 13.1 — Smokers Have Lower Avg BMI
Arrange: Set smokers’ BMI < non-smokers.
Act: Run feature13_smokersLowerBmi(records)
Assert: Output TRUE.
Result: Success

Test 13.2 — Opposite Case
Arrange: Smokers’ BMI > non-smokers.
Act: Run same function.
Assert: Output FALSE.
Result: Success


